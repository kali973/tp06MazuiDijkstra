@startuml

title __SERVICES's Class Diagram__\n

  namespace com.example.telecom.paris.maze.services {
    class com.example.telecom.paris.maze.services.ABox {
        + ABox()
        + isArrival()
        + writeCharTo()
    }
  }
  

  namespace com.example.telecom.paris.maze.services {
    class com.example.telecom.paris.maze.services.DBox {
        + DBox()
        + isDeparture()
        + writeCharTo()
    }
  }
  

  namespace com.example.telecom.paris.maze.services {
    class com.example.telecom.paris.maze.services.EBox {
        + EBox()
        + isEmpty()
        + toString()
        + writeCharTo()
    }
  }
  

  namespace com.example.telecom.paris.maze.services {
    class com.example.telecom.paris.maze.services.Labyrinthe {
        {static} + main()
    }
  }
  

  namespace com.example.telecom.paris.maze.services {
    abstract class com.example.telecom.paris.maze.services.MBox {
        - X : int
        - Y : int
        + MBox()
        + belongsToShortestPath()
        + getLabel()
        + getSuccessors()
        + getX()
        + getY()
        + isArrival()
        + isDeparture()
        + isEmpty()
        + isWall()
        + setArrival()
        + setDeparture()
        + setEmpty()
        + setWall()
        + setX()
        + setY()
    }
  }
  

  namespace com.example.telecom.paris.maze.services {
    class com.example.telecom.paris.maze.services.MFactory {
        + createMazeModel()
    }
  }
  

  namespace com.example.telecom.paris.maze.services {
    class com.example.telecom.paris.maze.services.Maze {
        ~ maze : MBox[][]
        - bufferRead : BufferedReader
        - length : int
        - observers : Set<ModelObserver>
        - width : int
        + Maze()
        + addObserver()
        + clearMaze()
        + clearShortestPath()
        + createArrivalBox()
        + createDepartureBox()
        + createEmptyBox()
        + createWallBox()
        + getDepartures()
        + getDistance()
        + getHeigth()
        + getMazeBox()
        + getMazeFactory()
        + getNumberOfBoxes()
        + getSuccessors()
        + getVertex()
        + getVertexes()
        + getWidth()
        + getarrival()
        + getshortestPaths()
        + initFromTextFile()
        + removeObserver()
        + saveToTextFile()
        + solve()
        + validate()
        # notifyObservers()
    }
  }
  

  namespace com.example.telecom.paris.maze.services {
    class com.example.telecom.paris.maze.services.WBox {
        + WBox()
        + isWall()
        + writeCharTo()
    }
  }
  

  com.example.telecom.paris.maze.services.ABox -up-|> com.example.telecom.paris.maze.services.MBox
  com.example.telecom.paris.maze.services.DBox -up-|> com.example.telecom.paris.maze.services.MBox
  com.example.telecom.paris.maze.services.EBox -up-|> com.example.telecom.paris.maze.services.MBox
  com.example.telecom.paris.maze.services.MBox .up.|> com.example.telecom.paris.maze.graph.Vertex
  com.example.telecom.paris.maze.services.MBox .up.|> com.example.telecom.paris.maze.model.MazeBoxModel
  com.example.telecom.paris.maze.services.MBox o-- com.example.telecom.paris.maze.services.Maze : maze
  com.example.telecom.paris.maze.services.MFactory .up.|> com.example.telecom.paris.maze.model.MazeFactory
  com.example.telecom.paris.maze.services.Maze .up.|> com.example.telecom.paris.maze.graph.Distance
  com.example.telecom.paris.maze.services.Maze .up.|> com.example.telecom.paris.maze.graph.Graph
  com.example.telecom.paris.maze.services.Maze .up.|> com.example.telecom.paris.maze.model.MazeModel
  com.example.telecom.paris.maze.services.Maze o-- com.example.telecom.paris.maze.services.ABox : arrival
  com.example.telecom.paris.maze.services.Maze o-- com.example.telecom.paris.maze.services.DBox : departure
  com.example.telecom.paris.maze.services.Maze o-- com.example.telecom.paris.maze.services.MFactory : mfactory
  com.example.telecom.paris.maze.services.Maze o-- com.example.telecom.paris.maze.graph.ShortestPaths : shortestPaths
  com.example.telecom.paris.maze.services.WBox -up-|> com.example.telecom.paris.maze.services.MBox


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
